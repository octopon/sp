global _start

section .data
arr1 db 00100010b, 01110011b, 01111000b, 00000001b, 11111111b, 11001000b, 00001010b, 11101000b, 00101011b, 01111111b, 10001000b, 11110000b

section .text

_start:
	mov ecx, 12         ; регистр общего назначения
	mov esi, arr1       ; индекс источника
	xor eax, eax        ; обнуление 

lp1:
	lodsb               ; загружает в eax байт из ячейки памяти указанной в индексе источника
	and eax, 00100010b  ; умножаем число на маску
	cmp eax, 00100010b  ; сравниваем получившееся число с маской
	je lp2              ; переходим в метку l2, если у нас байты равны
	loop lp1            ; возвращаемся в цикл
	jmp end             ; переход к концу программы
lp2:
	add ebx,1           ; счетчик для количества подходящих под маску элементов
	loop lp1            ; возвращаемся в цикл

end:
	mov eax, 1
	mov ebx, 0
	int 0x80

